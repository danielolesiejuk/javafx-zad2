package com.starterkit.javafx;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Locale;
import java.util.ResourceBundle;

import javafx.application.Application;
import javafx.event.EventHandler;
import javafx.fxml.FXMLLoader;
import javafx.geometry.Insets;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.ScrollPane;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseButton;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.TilePane;
import javafx.scene.paint.Color;
import javafx.stage.Screen;
import javafx.stage.Stage;

/**
 * Application entry point.
 *
 * @author Leszek
 */
public class Startup extends Application {

	public static void main(String[] args) {
		Application.launch(args);
	}

	 Stage stage;
	
	@Override
    public void start(Stage primaryStage) throws Exception {
		
		String langCode = getParameters().getNamed().get("lang");
		if (langCode != null && !langCode.isEmpty()) {
			Locale.setDefault(Locale.forLanguageTag(langCode));
		}
		
        stage = primaryStage;

        String path = "C:/Projects/StarterKit/javafx/javafx/src/main/resources/com/starterkit/javafx/imagetest/";

        File folder = new File(path);
        
        primaryStage.setTitle("StarterKit-JavaFX");
        
        Parent root = FXMLLoader.load(getClass().getResource("/com/starterkit/javafx/view/imageViewer.fxml"), //
				ResourceBundle.getBundle("com/starterkit/javafx/bundle/base"));


        Scene scene = new Scene(root);
        
        scene.getStylesheets().add(getClass().getResource("/com/starterkit/javafx/css/standard.css").toExternalForm());
        
        primaryStage.setScene(scene);
        primaryStage.sizeToScene();
        primaryStage.show();

    }

    private ImageView createImageView(final File imageFile) {
        // DEFAULT_THUMBNAIL_WIDTH is a constant you need to define
        // The last two arguments are: preserveRatio, and use smooth (slower)
        // resizing

        ImageView imageView = null;
        try {
            final Image image = new Image(new FileInputStream(imageFile), 150, 0, true,
                    true);
            imageView = new ImageView(image);
            imageView.setFitWidth(150);

                
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        }
        return imageView;
    }


	
}
